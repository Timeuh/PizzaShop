version: '3'
networks:
  pizza-shop.net:
    driver: bridge
services:

  #############################
  ##       API COMMANDE       #
  #############################

  # service  api.commande.pizza-shop: api pour la prise de commandes
  api.commande.pizza-shop:
    image: 'canals/php:8.2'
    env_file: ./shop.env
    ports:
      - '2080:80'
    volumes:
      - ../shop.pizza-shop/public:/var/www/html
      - ../shop.pizza-shop:/var/www
    working_dir: /var/www/
    restart: unless-stopped
    networks:
      pizza-shop.net:
        aliases:
          - api.pizza-shop.local
    depends_on:
      rabbitmq:
        condition: service_healthy
      pizza-shop.commande.db :
        condition: service_started




  # service sql pour le stockage des commandes utilisé par l'api order
  pizza-shop.commande.db:
    image: 'mariadb:latest'
    command: '--default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_general_ci'
    env_file: ./shop.env
    ports:
      - '3307:3306'
    networks:
      - pizza-shop.net
    volumes:
      - ../shop.pizza-shop/sql:/var/sql

  #############################
  #       API CATALOGUE       #
  #############################

  # service  api.catalogue.pizza-shop : pour le catalogue
  api.catalogue.pizza-shop:
    image: 'canals/php:8.2'
    env_file: ./cat.env
    ports:
      - '2180:80'
    volumes:
      - ../cat.pizza-shop/public:/var/www/html
      - ../cat.pizza-shop:/var/www
    working_dir: /var/www/
    networks:
      pizza-shop.net:
        aliases:
          - api.pizza-shop.local
    depends_on:
      - pizza-shop.catalogue.db

  # service sql pour le catalogue des pizzas utilisé par l'api order
  pizza-shop.catalogue.db:
    image: 'postgres:latest'
    env_file: ./cat.env
    ports:
      - '5432:5432'
    networks:
      - pizza-shop.net
    volumes:
      - ../shop.pizza-shop/sql:/var/sql'

  #############################
  #         API AUTH          #
  #############################

  api.auth.pizza-shop:
    image: 'canals/php:8.2'
    env_file: ./auth.env
    ports:
      - '2780:80'
    volumes:
      - ../auth.pizza-shop/public:/var/www/html
      - ../auth.pizza-shop:/var/www
      - ./auth.env:/config/.env
    working_dir: /var/www
    networks:
      pizza-shop.net:
        aliases:
          - auth.pizza-shop.local
    depends_on:
      - pizza-shop.auth.db

  pizza-shop.auth.db:
    image: 'mariadb:latest'
    command: '--default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_general_ci'
    env_file: ./auth.env
    ports:
      - '3308:3306'
    networks:
      - pizza-shop.net
    volumes:
      - ../auth.pizza-shop/sql:/var/sql

  #############################
  #        API GATEWAY        #
  #############################

  api.gateway.pizza-shop:
    image: 'canals/php:8.2'
    env_file: ./cat.env
    ports:
      - '2280:80'
    volumes:
      - ../gate.pizza-shop/public:/var/www/html
      - ../gate.pizza-shop:/var/www
    working_dir: /var/www/
    networks:
      pizza-shop.net:
        aliases:
          - api.pizza-shop.local
    depends_on:
      - pizza-shop.catalogue.db

  ########################################
  # service administration des bases sql #
  ########################################
  adminer:
    image: adminer
    ports:
      - '8080:8080'
    networks:
      - pizza-shop.net

  ########################################
  # Broker de message RabbitMQ #
  ########################################

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '15672:15672' #interface web de gestion et administration
      - '5672:5672' #api pour publier et consommer des messages
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 8s
      timeout: 30s
      retries: 3
    networks:
      - pizza-shop.net
    volumes:
      - ../rabbitmq.pizza-shop:/var/lib/rabbitmq
    env_file: ./rab.env

    ########################################
    # service de gestion des pizzas #
    ########################################

  api.gestion.pizza-shop:
    image: node:alpine
    networks:
      - pizza-shop.net
    working_dir: /usr/app
    command: sh -c "npm i && npm run watch" #for development only
    #command: sh -c "npm i && npm start" #for production only
    volumes:
      - ../gestion.pizza-shop:/usr/app
    ports:
      - 3333:3000
    environment:
      - NODE_ENV=development
    depends_on:
      - api.gestion.pizza-shop.db


  api.gestion.pizza-shop.db:
    image: 'mysql:latest'
    command: '--default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_general_ci'
    env_file: ./gestion.env
    ports:
      - '3309:3306'
    networks:
        - pizza-shop.net
    volumes:
        - ../gestion.pizza-shop/sql:/var/sql



  ########################################
  # Serveur node websocket #
  ########################################

  websocket:
    image: node:alpine
    ports:
      - '5180:3000'
    networks:
      - pizza-shop.net
    env_file: ./web.env
    command: sh -c "npm i && npm run watch"
    volumes:
      - ../websocket.pizza-shop:/app
    working_dir: /app
